[gd_scene load_steps=19 format=3 uid="uid://dmw2yccgpjno1"]

[ext_resource type="Script" uid="uid://bhcjt8kjaljqe" path="res://minigames/astro barrier/scenes/terminal.gd" id="1_exg6w"]
[ext_resource type="Texture2D" uid="uid://biuee6nlmpwun" path="res://minigames/astro barrier/assets/shapes/13.png" id="1_kkkuq"]
[ext_resource type="Texture2D" uid="uid://sandumhmdhx5" path="res://minigames/astro barrier/assets/shapes/15.png" id="4_2p8hi"]
[ext_resource type="FontFile" uid="uid://dpc5hlo0yw5i3" path="res://minigames/astro barrier/assets/fonts/103_cpBurbankSmall_10pt_st.ttf" id="4_qdcfp"]
[ext_resource type="Texture2D" uid="uid://dg8ye42a8ebro" path="res://minigames/astro barrier/assets/shapes/32.png" id="5_oigu2"]
[ext_resource type="Theme" uid="uid://bqtlr6cxc3h1g" path="res://minigames/astro barrier/terminal_ui.tres" id="6_exg6w"]
[ext_resource type="Texture2D" uid="uid://dwpfpal0ceukm" path="res://minigames/astro barrier/assets/shapes/80.png" id="6_plxuv"]
[ext_resource type="Texture2D" uid="uid://5srosm4nx56g" path="res://minigames/astro barrier/assets/shapes/24.png" id="7_4fdyo"]
[ext_resource type="PackedScene" uid="uid://dkr37jheu3wbl" path="res://minigames/astro barrier/objects/player.tscn" id="8_rc6rr"]
[ext_resource type="Texture2D" uid="uid://cwuuwch6anfpr" path="res://minigames/astro barrier/assets/shapes/132.svg" id="9_dd0ow"]
[ext_resource type="Texture2D" uid="uid://ceboi05nw5kd1" path="res://minigames/astro barrier/assets/shapes/130.svg" id="11_t1p2n"]

[sub_resource type="Animation" id="Animation_7phfo"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("arcademachine:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0.597, 0.597)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("background:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Node2D:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Node2D:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_exg6w"]
resource_name = "buttons"

[sub_resource type="Animation" id="Animation_hyius"]
resource_name = "new_animation"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("arcademachine:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.366667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(0.597, 0.597), Vector2(1.497, 1.497)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("background:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.366667),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/path = NodePath("Node2D:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.366667, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(0, -6.88), Vector2(0, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Node2D:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.266667),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_kjdn5"]
_data = {
&"RESET": SubResource("Animation_7phfo"),
&"buttons": SubResource("Animation_exg6w"),
&"new_animation": SubResource("Animation_hyius")
}

[sub_resource type="GDScript" id="GDScript_kj3o1"]
script/source = "extends CharacterBody2D

const GRID_SIZE := 35
var tool: String = \"block\"

# Preload scenes with descriptive names
const BlockScene := preload(\"res://minigames/astro barrier/objects/block.tscn\")
const TargetScene := preload(\"res://minigames/astro barrier/objects/target.tscn\")
const OrangeScene := preload(\"res://minigames/astro barrier/objects/orange_target.tscn\")
const OrangeBlockScene := preload(\"res://minigames/astro barrier/objects/orange_block.tscn\")
const BarScene := preload(\"res://minigames/astro barrier/objects/terminal/bar.tscn\")

const GRID_MIN := Vector2(315, 100)
const GRID_MAX := Vector2(596, 300)
# Define the grid rectangle correctly using GRID_MAX - GRID_MIN as its size
var grid_rect: Rect2 = Rect2(GRID_MIN, GRID_MAX - GRID_MIN)

func change_tool(t: String) -> void:
	# Use match to decide the scale for each tool type
	match t:
		\"target\":
			scale = Vector2(1.2, 1.2)
		\"block\":
			scale = Vector2(0.9, 0.9)
		\"orange_block\":
			scale = Vector2(1.9, 1.9)
		_:
			scale = Vector2(3, 3)
	tool = t
	$AnimatedSprite2D.play(t)
	
func _ready() -> void:
	change_tool(\"target\")
	
func _physics_process(delta: float) -> void:
	# Get the mouse position snapped to the grid and clamp it within the grid area
	var mouse_pos: Vector2 = get_global_mouse_position().snapped(Vector2(GRID_SIZE, GRID_SIZE))
	var clamped_pos: Vector2 = Vector2(
		clamp(mouse_pos.x, GRID_MIN.x, GRID_MAX.x),
		clamp(mouse_pos.y, GRID_MIN.y, GRID_MAX.y)
	)
	
	# Update the node's position and visibility based on whether the mouse is in the grid
	position = clamped_pos
	$AnimatedSprite2D.visible = grid_rect.has_point(mouse_pos)
	
	# Change tools with key presses (using elif to avoid multiple changes in one frame)
	if Input.is_key_pressed(KEY_1):
		change_tool(\"target\")
	elif Input.is_key_pressed(KEY_2):
		change_tool(\"block\")
	elif Input.is_key_pressed(KEY_3):
		change_tool(\"orange\")
	elif Input.is_key_pressed(KEY_4):
		change_tool(\"orange_block\")
	
	# Place objects when the left mouse button is pressed and the mouse is inside the grid
	if Input.is_mouse_button_pressed(MOUSE_BUTTON_LEFT) and grid_rect.has_point(mouse_pos):
		match tool:
			\"target\":
				var target_instance = TargetScene.instantiate()
				var bar_instance = BarScene.instantiate()
				target_instance.position = clamped_pos
				bar_instance.position = Vector2(455, clamped_pos.y)
				get_parent().add_child(bar_instance)
				get_parent().add_child(target_instance)
				# Reset tool if needed (or change to a default tool)
				tool = \"\"
			\"block\":
				var block_instance = BlockScene.instantiate()
				block_instance.scale = Vector2(0.32, 0.32)
				block_instance.position = clamped_pos
				get_parent().add_child(block_instance)
			\"orange\":
				var orange_instance = OrangeScene.instantiate()
				orange_instance.position = clamped_pos
				get_parent().add_child(orange_instance)
			\"orange_block\":
				var orange_block_instance = OrangeBlockScene.instantiate()
				# Offset the y-position by 28 as before
				orange_block_instance.position = clamped_pos + Vector2(0, 28)
				get_parent().add_child(orange_block_instance)

# Signal handlers to change the tool via UI buttons or similar
func _target_selected() -> void:
	change_tool(\"target\")

func _on_button_2_pressed() -> void:
	change_tool(\"block\")

func _orange_selected() -> void:
	change_tool(\"orange\")

func _on_orange_block_pressed():
	change_tool('orange_block')
"

[sub_resource type="SpriteFrames" id="SpriteFrames_7skmi"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("6_plxuv")
}],
"loop": true,
"name": &"block",
"speed": 5.0
}, {
"frames": [],
"loop": true,
"name": &"none",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("9_dd0ow")
}],
"loop": true,
"name": &"orange",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("11_t1p2n")
}],
"loop": true,
"name": &"orange_block",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_oigu2")
}],
"loop": true,
"name": &"target",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_yruuy"]
size = Vector2(33.3333, 32.2222)

[node name="Terminal" type="Node2D"]
script = ExtResource("1_exg6w")

[node name="ColorRect" type="ColorRect" parent="."]
custom_minimum_size = Vector2(400, 0)
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -2.0
offset_top = -12.0
offset_right = 648.0
offset_bottom = 405.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(1.415, 1.415)
color = Color(1.3236e-07, 0.165909, 0.13304, 1)

[node name="background" type="Sprite2D" parent="."]
position = Vector2(450, 285)
scale = Vector2(0.589, 0.589)
texture = ExtResource("1_kkkuq")

[node name="arcademachine" type="Sprite2D" parent="."]
z_index = 2
position = Vector2(466, 280)
scale = Vector2(0.597, 0.597)
texture = ExtResource("4_2p8hi")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_kjdn5")
}
autoplay = "new_animation"

[node name="Node2D" type="Node2D" parent="."]

[node name="24" type="Sprite2D" parent="Node2D"]
modulate = Color(0.26, 1, 0.593, 0.305882)
position = Vector2(872, 273)
scale = Vector2(0.338533, 0.338533)
texture = ExtResource("7_4fdyo")

[node name="ColorRect3" type="ColorRect" parent="Node2D"]
offset_left = 288.0
offset_top = 40.0
offset_right = 621.0
offset_bottom = 455.0
color = Color(0, 0.67, 0.335, 0.239216)

[node name="ColorRect2" type="ColorRect" parent="Node2D"]
offset_left = 292.0
offset_top = 44.0
offset_right = 617.0
offset_bottom = 451.0
size_flags_horizontal = 4
color = Color(0, 0.12, 0.12, 0.6)

[node name="Label2" type="Label" parent="Node2D"]
offset_left = 35.0
offset_top = 21.0
offset_right = 296.0
offset_bottom = 47.0
theme_override_colors/font_color = Color(0.944, 1, 0.52, 0.113725)
theme_override_fonts/font = ExtResource("4_qdcfp")
theme_override_font_sizes/font_size = 21
text = "astroconsole v0.1"

[node name="Target" type="Button" parent="Node2D"]
offset_left = 284.0
offset_top = 463.0
offset_right = 362.0
offset_bottom = 520.0
theme = ExtResource("6_exg6w")
icon = ExtResource("5_oigu2")
icon_alignment = 1
expand_icon = true

[node name="Block" type="Button" parent="Node2D"]
offset_left = 371.0
offset_top = 463.0
offset_right = 449.0
offset_bottom = 520.0
theme = ExtResource("6_exg6w")
icon = ExtResource("6_plxuv")
icon_alignment = 1
expand_icon = true

[node name="Orange" type="Button" parent="Node2D"]
offset_left = 460.0
offset_top = 463.0
offset_right = 538.0
offset_bottom = 520.0
theme = ExtResource("6_exg6w")
icon = ExtResource("9_dd0ow")
icon_alignment = 1
expand_icon = true

[node name="Orange Block" type="Button" parent="Node2D"]
offset_left = 548.0
offset_top = 463.0
offset_right = 626.0
offset_bottom = 520.0
theme = ExtResource("6_exg6w")
icon = ExtResource("11_t1p2n")
icon_alignment = 1
expand_icon = true

[node name="astrobarrierplayer" parent="Node2D" instance=ExtResource("8_rc6rr")]
position = Vector2(448, 417)
scale = Vector2(0.51, 0.51)

[node name="Cursor" type="CharacterBody2D" parent="Node2D"]
modulate = Color(1, 1, 1, 0.203922)
top_level = true
visibility_layer = 5
position = Vector2(258.28, -30.335)
scale = Vector2(0.9, 0.9)
script = SubResource("GDScript_kj3o1")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="Node2D/Cursor"]
scale = Vector2(0.352713, 0.352713)
sprite_frames = SubResource("SpriteFrames_7skmi")
animation = &"target"

[node name="CollisionShape2D" type="CollisionShape2D" parent="Node2D/Cursor"]
position = Vector2(-0.311096, -0.738889)
shape = SubResource("RectangleShape2D_yruuy")

[connection signal="button_down" from="Node2D/Target" to="Node2D/Target" method="_on_button_down"]
[connection signal="button_up" from="Node2D/Target" to="Node2D/Target" method="_on_button_up"]
[connection signal="pressed" from="Node2D/Target" to="Node2D/Cursor" method="_target_selected"]
[connection signal="pressed" from="Node2D/Block" to="Node2D/Cursor" method="_on_button_2_pressed"]
[connection signal="pressed" from="Node2D/Orange" to="Node2D/Cursor" method="_orange_selected"]
[connection signal="pressed" from="Node2D/Orange Block" to="Node2D/Cursor" method="_on_orange_block_pressed"]
